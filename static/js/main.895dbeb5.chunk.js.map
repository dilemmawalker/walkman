{"version":3,"sources":["assets/images/launcher-window-background@2x.png","assets/illustrations/sound-wave.svg","assets/illustrations/google-logo.svg","assets/illustrations/facebook-logo.svg","layouts/LauncherWindow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LauncherWindowStyle","width","height","backgroundImage","LauncherWindowBackground","backgroundColor","backgroundAttachment","backgroundRepeat","backgroundSize","ElementsContainerStyle","display","flexDirection","alignItems","justifyContent","FilledBtnStyle","borderRadius","HollowBtnStyle","borderWidth","borderColor","LauncherWindow","props","state","isSigninWithGoogleHovered","isSigninWithFacebookHovered","style","className","src","SoundWaveIllustration","fontFamily","color","fontSize","marginTop","GoogleLogo","fontWeight","FacebookLogo","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,+RCOrCC,EAAsB,CACxBC,MAAO,OACPC,OAAQ,OACRC,gBAAgB,QAAD,OAAUC,IAAV,MACfC,gBAAiB,UACjBC,qBAAsB,QACtBC,iBAAkB,YAClBC,eAAgB,SAGdC,EAAyB,CAC3BR,MAAO,OACPC,OAAQ,OACRC,gBAAiB,qDACjBO,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAGdC,EAAiB,CACnBT,gBAAiB,UACjBU,aAAc,4BACdd,MAAO,6BACPS,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZV,OAAQ,6BAGNc,EAAiB,CACnBC,YAAa,MACbC,YAAa,QACbH,aAAc,4BACdd,MAAO,6BACPS,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZV,OAAQ,6BAyCGiB,EAtCf,kDAEI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,2BAA2B,EAC3BC,6BAA6B,GAJlB,EAFvB,qDAWQ,OACI,yBAAKC,MAAOxB,GACR,yBAAKyB,UAAU,qBAAqBD,MAAOf,GACvC,yBAAKiB,IAAKC,IAAuBH,MAAO,CAAEvB,MAAO,6BAA8BC,OAAQ,UACvF,yBAAKuB,UAAU,OAAOD,MAAO,CAAEI,WAAY,cAAeC,MAAO,QAASC,SAAU,8BAApF,qBACA,yBAAKN,MAAO,CAAEI,WAAY,cAAeC,MAAO,QAASC,SAAU,4BAA6BC,UAAW,iCAA3G,sBACA,yBAAKN,UAAU,OAAOD,MAAO,CAAEI,WAAY,gBAAiBC,MAAO,QAASC,SAAU,8BAAtF,iBACA,yBAAKN,MAAOV,GACR,yBAAKY,IAAKM,IAAYP,UAAU,OAAOD,MAAO,CAAEvB,MAAO,4BAA6BC,OAAQ,UAC5F,0BAAMsB,MAAO,CAAEI,WAAY,YAAaC,MAAO,QAASC,SAAU,4BAA6BG,WAAY,SAA3G,YAEJ,yBAAKR,UAAU,cAAcD,MAAQR,GACjC,yBAAKU,IAAKQ,IAAcT,UAAU,OAAOD,MAAO,CAAEvB,MAAO,4BAA6BC,OAAQ,UAC9F,0BAAMsB,MAAO,CAAEI,WAAY,YAAaK,WAAY,OAAQJ,MAAO,QAASC,SAAU,8BAAtF,aAEJ,yBAAKL,UAAU,OAAOD,MAAO,CAAEI,WAAY,eAAgBE,SAAU,4BAA6BD,MAAO,UAAzG,uCAEI,0BAAML,MAAO,CAAEI,WAAY,gBAA3B,aAEJ,yBAAKJ,MAAO,CAAEI,WAAY,eAAgBE,SAAU,4BAA6BD,MAAO,QAASE,UAAW,gCACxG,0BAAMP,MAAO,CAAEI,WAAY,gBAA3B,UADJ,QACkE,0BAAMJ,MAAO,CAAEI,WAAY,gBAA3B,2BA/BtF,GAAoCO,aCnCrBC,MARf,WACE,OACE,yBAAKZ,MAAO,CAAEtB,OAAO,OAAQD,MAAO,SAClC,kBAAC,EAAD,QCIcoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.895dbeb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/launcher-window-background@2x.d71c39e9.png\";","module.exports = __webpack_public_path__ + \"static/media/sound-wave.4dd30c47.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c6b14713.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-logo.1b519cda.svg\";","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport LauncherWindowBackground from '../assets/images/launcher-window-background@2x.png';\r\nimport SoundWaveIllustration from '../assets/illustrations/sound-wave.svg';\r\nimport GoogleLogo from '../assets/illustrations/google-logo.svg';\r\nimport FacebookLogo from '../assets/illustrations/facebook-logo.svg';\r\n\r\nconst LauncherWindowStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundImage: `url( ${LauncherWindowBackground} )`,\r\n    backgroundColor: '#181818',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover'\r\n}\r\n\r\nconst ElementsContainerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundImage: 'radial-gradient(rgba(0,0,0,50%), rgba(0,0,0,100%))',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n}\r\n\r\nconst FilledBtnStyle = {\r\n    backgroundColor: '#1DB954',\r\n    borderRadius: 'calc( (100vh / 1080)*53 )',\r\n    width: 'calc( (100vh / 1080)*500 )',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: 'calc( (100vh / 1080)*80 )'\r\n}\r\n\r\nconst HollowBtnStyle = {\r\n    borderWidth: '2px',\r\n    borderColor: 'white',\r\n    borderRadius: 'calc( (100vh / 1080)*53 )',\r\n    width: 'calc( (100vh / 1080)*500 )',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: 'calc( (100vh / 1080)*80 )'\r\n}\r\n\r\nexport class LauncherWindow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSigninWithGoogleHovered: false,\r\n            isSigninWithFacebookHovered: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={LauncherWindowStyle}>\r\n                <div className=\"elements-container\" style={ElementsContainerStyle}>\r\n                    <img src={SoundWaveIllustration} style={{ width: 'calc( (100vh / 1080)*418 )', height: 'auto' }} />\r\n                    <div className=\"mt-4\" style={{ fontFamily: 'gotham-bold', color: 'white', fontSize: 'calc( (100vh / 1080)*52 )' }}>Millions of songs</div>\r\n                    <div style={{ fontFamily: 'gotham-bold', color: 'white', fontSize: 'calc( (100vh / 1080)*52 )', marginTop: 'calc( -1*(100vh / 1080)*28 )' }}>Listen on Walkman.</div>\r\n                    <div className=\"mt-5\" style={{ fontFamily: 'gotham-medium', color: 'white', fontSize: 'calc( (100vh / 1080)*22 )' }}>Continue with</div>\r\n                    <div style={FilledBtnStyle}>\r\n                        <img src={GoogleLogo} className=\"mx-4\" style={{ width: 'calc( (100vh / 1080)*32 )', height: 'auto' }}/>\r\n                        <span style={{ fontFamily: 'helvetica', color: 'white', fontSize: 'calc( (100vh / 1080)*28 )', fontWeight: 'bold' }}>Google+</span>\r\n                    </div>\r\n                    <div className='border mt-3' style={ HollowBtnStyle }>\r\n                        <img src={FacebookLogo} className=\"mx-4\" style={{ width: 'calc( (100vh / 1080)*18 )', height: 'auto' }}/>\r\n                        <span style={{ fontFamily: 'helvetica', fontWeight: 'bold', color: 'white', fontSize: 'calc( (100vh / 1080)*28 )' }}>Facebook</span>\r\n                    </div>\r\n                    <div className=\"mt-4\" style={{ fontFamily: 'gotham-light', fontSize: 'calc( (100vh / 1080)*18 )', color: 'white' }}>\r\n                        By clicking log in, you agree to our\r\n                        <span style={{ fontFamily: 'gotham-bold' }}> Privacy</span>\r\n                    </div>\r\n                    <div style={{ fontFamily: 'gotham-light', fontSize: 'calc( (100vh / 1080)*18 )', color: 'white', marginTop: 'calc( -1*(100vh / 1080)*5 )' }}>\r\n                        <span style={{ fontFamily: 'gotham-bold' }}>Policy</span> and <span style={{ fontFamily: 'gotham-bold' }}>Terms of Service</span>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default LauncherWindow;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport LauncherWindow from './layouts/LauncherWindow';\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ height:\"100%\", width: \"100%\" }}>\r\n      <LauncherWindow />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}